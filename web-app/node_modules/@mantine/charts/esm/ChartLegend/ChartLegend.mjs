'use client';
import React from 'react';
import { factory, useProps, useStyles, ColorSwatch, Box } from '@mantine/core';
import { getSeriesLabels } from '../utils/get-series-labels/get-series-labels.mjs';
import classes from './ChartLegend.module.css.mjs';

function getFilteredChartLegendPayload(payload) {
  return payload.filter((item) => item.color !== "none");
}
const defaultProps = {};
const ChartLegend = factory((_props, ref) => {
  const props = useProps("ChartLegend", defaultProps, _props);
  const {
    classNames,
    className,
    style,
    styles,
    unstyled,
    vars,
    payload,
    onHighlight,
    legendPosition,
    mod,
    series,
    ...others
  } = props;
  const getStyles = useStyles({
    name: "ChartLegend",
    classes,
    props,
    className,
    style,
    classNames,
    styles,
    unstyled
  });
  if (!payload) {
    return null;
  }
  const filteredPayload = getFilteredChartLegendPayload(payload);
  const labels = getSeriesLabels(series);
  const items = filteredPayload.map((item, index) => /* @__PURE__ */ React.createElement(
    "div",
    {
      key: index,
      ...getStyles("legendItem"),
      onMouseEnter: () => onHighlight(item.dataKey),
      onMouseLeave: () => onHighlight(null)
    },
    /* @__PURE__ */ React.createElement(
      ColorSwatch,
      {
        color: item.color,
        size: 12,
        ...getStyles("legendItemColor"),
        withShadow: false
      }
    ),
    /* @__PURE__ */ React.createElement("p", { ...getStyles("legendItemName") }, labels[item.dataKey] || item.dataKey)
  ));
  return /* @__PURE__ */ React.createElement(Box, { ref, mod: [{ position: legendPosition }, mod], ...getStyles("legend"), ...others }, items);
});
ChartLegend.displayName = "@mantine/charts/ChartLegend";

export { ChartLegend, getFilteredChartLegendPayload };
//# sourceMappingURL=ChartLegend.mjs.map
